# Christmas Tree Backbone (CTB) Blueprint - Single Source of Truth
# Doctrine-locked visualization system with HEIR canopy

meta:
  spec_version: "1.0.0"
  doctrine_lock: true
  notes:
    - "HEIR is the canopy over EVERYTHING."
    - "IMO is a vertical planning mechanism at each node: Input ‚Üí Middle ‚Üí Output."
    - "ORBT is the discipline lens at each node."
    - "CARB is the runtime overlay at each node."
    - "Schemas (STAMPED/SPVPET/STACKED) are the base/foundation."

# HEIR Canopy - History ‚Ä¢ Enforcement ‚Ä¢ Integrity ‚Ä¢ Repair
heir:
  name: "HEIR Canopy"
  acronym: "History ‚Ä¢ Enforcement ‚Ä¢ Integrity ‚Ä¢ Repair"
  description: "Overarching compliance canopy. All nodes run under HEIR discipline."
  render_hints:
    style: "canopy_roof"
    badge: "HEIR"
    legend: true

# Christmas Tree Star
star:
  id: "STAR-000"
  name: "IMO ‚Üí Garage Orchestrator"
  altitude: "30k"
  tagline: "Vertical IMO at every node; ORBT discipline; CARB runtime; HEIR over all."
  render_hints:
    icon: "‚≠ê"
    emphasis: true

# Branches with doctrine-locked nodes
branches:
  - id: "BR-DOCTRINE"
    name: "Design & Doctrine"
    altitude: "20k"
    render_hints:
      icon: "üìê"
    nodes:
      - id: "DD-01"
        label: "Blueprint Registry"
        altitude: "10k"
        orientation: "vertical"
        IMO:
          input:
            - "Vision payload (40k‚Üí1k altitude JSON)"
            - "Process constants & variables"
          middle:
            orchestration:
              orchestrator: "Garage-MCP"
              subagents: ["Mantis", "Abacus"]
              tools: ["Zod validator", "Firebase Admin", "Neon Client"]
              playbook:
                - "Schema validate CTB"
                - "Version-lock blueprint"
                - "Persist to registry/vault"
            operations:
              - title: "Schema validate"
                tool: "Zod validator"
                computation: "CTB schema checks + doctrine ID attach"
              - title: "Version-lock"
                tool: "Firebase (registry) + Neon (vault)"
                computation: "Hash blueprint + write registry record"
            contracts:
              preconditions: ["env.secrets present"]
              postconditions: ["version_hash persisted"]
            promotion:
              gate: true
              rules: ["HEIR pass", "ORBT operate OK"]
              destinations: ["Neon: shq.dpr_doctrine"]
              human_firebreak: true
            failure:
              failure_modes: ["Schema drift"]
              retries: 1
              fallback_plan: ["Rollback to last-known good"]
              incident_log: "Neon: shq.master_error_log"
            observability:
              metrics: ["duration_ms"]
              logs: ["HEIR.audit"]
              trace_fields: ["trace_id", "timestamp", "version_hash"]
          output:
            - "Approved blueprint version"
            - "CTB render config"
        ORBT:
          operate: ["Serve current blueprint to UI"]
          repair: ["Rollback to last-known good", "Flag invalid schema"]
          build: ["Add node types", "Doctrine upgrades"]
          train: ["Authoring guide", "Examples gallery"]
        CARB:
          compliance: ["STAMPED/SPVPET/STACKED alignment"]
          automation: ["Auto-publish diagram on merge"]
          repair: ["Mantis hooks", "BMAD traces"]
          blueprint: ["Altitude JSON kept in registry"]
        links:
          repo: "https://github.com/your-org/blueprint-registry"
          render_endpoint: "https://your-render.app/api/registry"
          firebase_doc: "projects/project-pig/collections/blueprint_registry"
        badges: ["DOCTRINE-LOCKED", "VALIDATED", "PROMOTION-GATE"]

  - id: "BR-EXEC"
    name: "Execution"
    altitude: "20k"
    render_hints:
      icon: "‚öôÔ∏è"
    nodes:
      - id: "EX-01"
        label: "IMO Factory"
        altitude: "10k"
        orientation: "vertical"
        IMO:
          input:
            - "User inputs"
            - "Repo metadata"
            - "ENV secrets"
          middle:
            orchestration:
              orchestrator: "Garage-MCP"
              subagents: ["Mantis", "Abacus"]
              tools: ["HEIR runner", "Git hooks", "Zod validator"]
              playbook:
                - "Resolve blueprint + env context"
                - "Run HEIR checks (enforcement/integrity)"
                - "Run atomic diff + perf baseline compare"
                - "If pass ‚Üí emit Promotion ticket"
            operations:
              - title: "HEIR checks"
                tool: "HEIR runner"
                computation: "trace IDs ‚Ä¢ enforcement gates ‚Ä¢ integrity checks"
                inputs: ["repo@commit", "env.secrets"]
                outputs: ["heir_pass:boolean", "trace_id"]
              - title: "Atomic diff"
                tool: "Git hooks"
                computation: "3-file limit ‚Ä¢ perf baseline compare"
                inputs: ["repo@commit", "baseline@prev"]
                outputs: ["diff_report", "perf_delta"]
            contracts:
              preconditions:
                - "env.secrets present"
                - "blueprint version locked"
                - "baseline available"
              postconditions: ["trace_id logged", "validation report stored"]
              io_contracts:
                input_contract:
                  - "repo@commit must be reachable"
                  - "baseline must include perf metrics"
                output_contract:
                  - "promotion ticket includes trace_id + version_hash"
            promotion:
              gate: true
              rules:
                - "HEIR: Enforcement + Integrity pass"
                - "ORBT: Operate within limits"
                - "Performance regression < 10%"
              destinations: ["Neon: shq.dpr_doctrine"]
              human_firebreak: true
            failure:
              failure_modes:
                - "Missing baseline"
                - "Perf regression > 10%"
                - "Schema drift"
              retries: 1
              fallback_plan:
                - "Auto-revert to last-known good"
                - "Open incident with Mantis"
              incident_log: "Neon: shq.master_error_log"
            observability:
              metrics: ["duration_ms", "perf_delta", "pass_rate"]
              logs: ["HEIR.audit", "BMAD.trace"]
              trace_fields: ["trace_id", "timestamp", "version_hash"]
            tempo_sla: "must complete < 2 min"
          output:
            - "Validated artifact"
            - "Promotion ticket"
        ORBT:
          operate: ["Run validators", "Show live status"]
          repair: ["Auto-fix suggestions"]
          build: ["New validators", "UI modules"]
          train: ["Operator SOPs", "Playbook clips"]
        CARB:
          compliance: ["Promotion gates ‚Ä¢ doctrine checks"]
          automation: ["CI pipeline triggers"]
          repair: ["Auto-revert on regression"]
          blueprint: ["Artifact ties back to registry entry"]
        links:
          repo: "https://github.com/your-org/imo-factory"
          render_endpoint: "https://your-render.app/api/validate"
          neon_table: "shq.dpr_doctrine"
        badges: ["BMAD-TRACE", "PERF-BASELINE", "HEIR-GATED"]

# Schema Grounding - STAMPED/SPVPET/STACKED
schemas:
  neon:
    name: "STAMPED (Vault)"
    sample_tables:
      - table: "shq.dpr_doctrine"
        key_columns: ["section_number", "title", "version_hash", "created_at"]
    render_hints:
      icon: "üóÑÔ∏è"
  firebase:
    name: "SPVPET (Working Memory)"
    sample_collections:
      - collection: "agent_whiteboard"
        key_fields:
          - "agent_id"
          - "process_id"
          - "blueprint_id"
          - "ttl"
          - "validated"
          - "timestamp_last_touched"
    render_hints:
      icon: "üìù"
  bigquery:
    name: "STACKED (Analytics)"
    sample_datasets:
      - dataset: "ops_events"
        key_fields: ["event_id", "trace_id", "ts", "severity", "context"]
    render_hints:
      icon: "üìä"

# Legend
legend:
  altitudes:
    - label: "30k"
      description: "Vision / Star"
    - label: "20k"
      description: "Categories / Branches"
    - label: "10k"
      description: "Systems / Nodes"
    - label: "5k"
      description: "Executable Steps (optional per node)"
    - label: "1k"
      description: "Implementation details (code/scripts)"
  acronyms:
    HEIR: "History ‚Ä¢ Enforcement ‚Ä¢ Integrity ‚Ä¢ Repair"
    IMO: "Input ‚Ä¢ Middle ‚Ä¢ Output (vertical planning mechanism)"
    ORBT: "Operate ‚Ä¢ Repair ‚Ä¢ Build ‚Ä¢ Train (discipline lens)"
    CARB: "Compliance ‚Ä¢ Automation ‚Ä¢ Repair ‚Ä¢ Blueprint (runtime overlay)"
    "STAMPED/SPVPET/STACKED": "Unified schema doctrine: Neon/Firebase/BigQuery"

# Constraints
constraints:
  require_heir_canopy: true
  require_vertical_imo: true
  require_orbt_per_node: true
  require_middle_operations: true
  require_schemas_base: true
  allow_carb_optional: true

# Render hints
render_hints:
  layout: "ctb_tree"
  imo_stack_style: "vertical_cards"
  branch_alignment: "horizontal"
  schema_band_position: "bottom_base"
  colors:
    heir: "emphasize"
    imo: "neutral"
    orbt: "accent"
    carb: "muted"
    schemas: "foundation"
  emphasis:
    middle_column_scale: 1.15
    middle_highlight: true

# Telemetry
telemetry:
  trace_id: "TRACE-CTB-EXAMPLE-001"
  version_hash: "abc123example"
  timestamp_iso: "2025-08-26T09:00:00Z"